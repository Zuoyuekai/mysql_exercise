student id name classes_id 
classes id name 

create table classes (
    id int primary key auto_increment,
    name varchar(10)
);
create table student (
    id int primary key auto_increment,
    name varchar(10),
    classes_id int,
    foreign key (classes_id) references classes(id)
);

insert into classes(name) values(1),(2);

insert into student(name,classes_id) values
('王一',1),
('王二',2),
('王三',1),
('王四',2);

insert into student(name) values
('王一'),
('王二'),
('王三'),
('王四');


-- 多对多关系
drop table if exists student;
create table student(
    id int primary key auto_increment,
    sn int UNIQUE,
    name varchar(10)
);
drop table if exists classes;
create table classes(
    id int primary key auto_increment,
    name varchar(10)
);
drop table if exists score;
create table score(
    id int primary key auto_increment,
    score decimal(3,1) comment '成绩',
    student_id int,
    classes_id int,
    foreign key  (student_id) references student(id),
    foreign key  (classes_id) references classes(id)
);

drop table if exists test_user;
create table test_user (
    id int primary key auto_increment,
    name varchar(10)
);

insert into test_user(name) select name from student;

-- 多表联合查询
select stu.id,stu.name,cou.name,sco.score from student stu
join score sco on stu.id = sco.student_id
join course cou on cou.id = sco.course_id;

-- 外连接
-- 对比内外连接
select stu.id,stu.name,cou.name,sco.score from student stu 
left join score sco on stu.id = sco.student_id
left join course cou on cou.id = sco.course_id 
order by sco.score desc;

select stu.id,stu.name,cou.name,sco.score from student stu 
left join score sco on stu.id = sco.student_id
left join course cou on cou.id = sco.course_id
and sco.score > 60
order by sco.score desc;

select stu.id,stu.name,cou.name,sco.score from student stu 
left join score sco on stu.id = sco.student_id
join course cou on cou.id = sco.course_id
and sco.score > 60
order by sco.score desc;

-- 自连接
select stu.id,stu.name,sco.score 计算机原理, sco2.score 英文 from student stu 
join score sco on stu.id = sco.student_id
join course cou on cou.id = sco.course_id
join score sco2 on stu.id = sco2.student_id
join course cou2 on cou2.id = sco2.course_id
and cou.name = '计算机原理'
and cou2.name = '英文'
and sco.score > sco2.score
order by stu.id;

-- 删除重复数据，保留一行

select stu.id,stu.name,cou.name,sco.score,count(sco.id) from student stu
join score sco on stu.id = sco.student_id
join course cou on cou.id = sco.course_id;

select score,student_id,course_id from score 
group by score,student_id,course_id 
having count(0) > 1;

select student_id from score 
group by score,student_id,course_id 
having count(0) > 1;

有一张员工表emp，字段：姓名name，性别sex，部门depart，工资salary。查询以下数据：
作业内容
1、查询男女员工的平均工资
2、查询各部门的总薪
3、查询总薪水排名第二的部门
4、查询姓名重复的员工信息
5、查询各部门薪水大于10000的男性员工的平均薪水

select sex,avg(salary) from emp group by sex;

select depart, sum(salary) from emp group by depart;

select depart, sum(salary) from emp group by depart limit 1,1;

select * from emp group by name having count(0) > 1;

select name, depart, sex, avg(salary) from emp where salary > 10000 and sex = '男' group by depart;

现在有员工表、部门表和薪资表。部门表depart的字段有depart_id， name；
员工表 staff 的字段有 staff_id  name age  depart_id；
薪资表salary 的字段有 salary_id staff_id salary month。

（问题a）：求每个部门'2016-09'月份的部门薪水总额
（问题b）：求每个部门的部门人数，要求输出部门名称和人数
（问题c）：求公司每个部门的月支出薪资数，要求输出月份和本月薪资总数

select dep.name,sum(sal.salary) from depart dep 
join staff sta on sta.depart_id = dep.depart_id
join salary sal on sal.staff_id = sta.staff_id
and sta.month < '2016-10-01 00:00:00'
and sta.month > '2016-09-01 00:00:00'
group by dep.name;

select dep.name, count(sta.staff_id) from depart dep 
join staff sta on sta.depart_id = dep.depart_id
group by dep.name;

select sta.month, sum(salary) from depart dep 
join staff sta on sta.depart_id = dep.depart_id
join salary sal on sal.staff_id = sta.staff_id
group by sta.month;


有两个表分别如下：

表A(varchar(32) name， int grade)
数据：zhangshan 80， lisi 60， wangwu 84

表B(varchar(32) name， int age)
数据：zhangshan 26， lisi 24， wangwu 26， wutian 26

写SQL语句得到如下查询结果：
| NAME   | GRADE | AGE |
| --------- | ----- | ---- |
| zhangshan | 80  | 26  |
| lisi   | 60  | 24  |
| wangwu  | 84  | 26  |
| wutian  | null | 26  |

select a.name, a.grade, b.age from A a 
left join B b on a.name = b.name;


编写一个SQL查询，获取Employee表中第二高的薪水（Salary）【陌陌科技2020届校招笔试题】
+-----+-------+
| Id | Salary|
+-----+-------+
| 1  | 100 |
+-----+-------+
| 2  | 200 |
+-----+-------+
| 3  | 300 |
+-----+-------+
例如上述Employee表，SQL查询应该返回200作为第二高的薪水。如果不存在第二高的薪水，那么查询应该返回null。
+---------------------+
| SecondHighestSalary |
+---------------------+
|    200     |
+---------------------+

select Salary SecondHighestSalary from Employee order by Salary limit 1,1;


已知T1和T2的字段定义完全相同，T1有5条不同数据，
T2有5条不同数据，其中T1有2条数据存在表T2中，使用UNION语句查询这些数据，要求重复数据不出现

select * from T1 
union
select * from T2;


学校食堂管理系统，包含食堂表，食堂仓口表，仓口收费记录表

drop table if exists canteen;
create table canteen (
    id int primary key auto_increment,
    name varchar(20)
);

drop table if exists canteenWindow;
create table canteenWindow (
    id int primary key auto_increment,
    name varchar(20),
    canteen_id int,
    foreign key (canteen_id) references canteen(id)
);

drop table if exists windowEarning;
create table windowEarning (
    id int primary key auto_increment,
    time timestamp,
    money decimal(5,2),
    canteenWindow_id int,
    foreign key (canteenWindow_id) references canteenWindow(id)
);

-- 车辆违章系统，包含用户表，车辆表，违章信息表。违章信息表中包含用户和车辆的违章信息
-- user car illegal

drop table if exists user;
create table user(
    id int primary key auto_increment,
    name varchar(20)
);

drop table if exists car;
create table car (
    id int primary key auto_increment,
    name varchar(20),
    user_id,
    foreign key (user_id) references user(id)
);

drop table if exists illegal;
create table illegal (
    id int primary key auto_increment,
    name text comment '违规内容',
    time timestamp,
    money decimal(5,1) comment '罚款',
    car_id int,
    user_id int,
    foreign key (car_id) references car(id),
    foreign key (user_id) references user(id)

);

学校宿舍管理系统，要求包含宿舍信息，学生信息，每日的宿舍查房记录。

dormitory student dormitoryRecord

drop table if exists dormitory;
create table dormitory (
    id int primary key auto_increment,
    name varchar(10)
);

drop table if exists student;
create table student (
    id int primary key auto_increment,
    sn int UNIQUE,
    name varchar(20),
    dormitory_id int,
    foreign key (dormitory_id) references dormitory(id)
);

drop table if exists dormitoryRecord;
create table dormitoryRecord (
    id int primary key auto_increment,
    time timestamp,
    message text,
    dormitory_id int,
    foreign key (dormitory_id) references dormitory(id)
);

考勤系统，包含员工表，考勤记录表

staff attendance

drop table if exists staff;
create table staff (
    id int primary key auto_increment,
    name varchar(20)
);

drop table if exists attendance;
create table attendance (
    id int primary key auto_increment,
    time timestamp,
    message text comment '考勤状态',
    staff_id int,
    foreign key (staff_id) references staff(id)
);